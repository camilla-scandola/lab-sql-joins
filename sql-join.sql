USE sakila;

-- 1. List the number of films per category
SELECT * FROM category;
SELECT * FROM film;

SELECT 
  c.name AS category_name,                -- 1. select the category name (because it's the main grouping variable)
  COUNT(f.film_id) AS total_films         -- 2. count how many films belong to each category, and alias it as total_films

FROM film f                               -- 3. start with the film table (contains film details)

JOIN film_category fc                     -- 4. join the linking table (because it connects films to categories)
  ON f.film_id = fc.film_id               -- 5. match each film to its record in film_category

JOIN category c                           -- 6. join the category table to get category names
  ON fc.category_id = c.category_id       -- 7. connect via the category_id foreign key

GROUP BY c.name;                          -- 8. group results by category name so the COUNT applies per category

-- 2 Retrieve the store ID, city, and country for each store
SELECT * FROM store;
SELECT * FROM city;
SELECT * FROM country;

SELECT 
  s.store_id AS store_id,                -- 1. identify the store
  c.city AS city_name,                   -- 2. identify the city where the store is located
  co.country AS country_name             -- 3. identify the country where that city belongs

FROM store s                             -- 4. start from the store table
JOIN address a                           -- 5. link to address to get location details
  ON s.address_id = a.address_id         -- 6. connect each store to its address
JOIN city c                              -- 7. link to the city table
  ON a.city_id = c.city_id               -- 8. connect each address to its city
JOIN country co                          -- 9. link to the country table
  ON c.country_id = co.country_id        -- 10. connect each city to its country

ORDER BY s.store_id;    

-- 3. Calculate the total revenue generated by each store in dollars
SELECT * FROM payment;
SELECT * FROM store;
SELECT * FROM staff;


SELECT 
  s.store_id AS store_id,                 
  SUM(p.amount) AS total_revenue          
FROM store s                              
JOIN staff st                             
  ON s.store_id = st.store_id             
JOIN payment p                            
  ON st.staff_id = p.staff_id             
GROUP BY s.store_id                       
ORDER BY s.store_id;  

-- 4. Determine the average running time of films for each category
SELECT * FROM category;
SELECT * FROM film;
SELECT * FROM film_category;

SELECT 
  c.name AS category_name,                		-- 1. select the category name (main grouping variable)
  ROUND(AVG(f.length), 2) AS average_duration 	-- 2. calculate the average film length per category, rounded to 2 decimals

FROM film f                               		-- 3. start from the film table (contains film length and details)

JOIN film_category fc                     		-- 4. join linking table that connects films to categories
  ON f.film_id = fc.film_id               		-- 5. match each film with its category reference

JOIN category c                           		-- 6. join category table to get category names
  ON fc.category_id = c.category_id       		-- 7. connect via the category_id foreign key

GROUP BY c.name                           		-- 8. group results by category to get an average per category
ORDER BY average_duration DESC;               	-- 9. (optional) sort from longest to shortest average duration

-- 5. Identify the film categories with the longest average running time
SELECT 
  c.name AS category_name,                		
  ROUND(AVG(f.length), 2) AS average_duration 	

FROM film f                               		

JOIN film_category fc                     		
  ON f.film_id = fc.film_id               		

JOIN category c                           		
  ON fc.category_id = c.category_id       		

GROUP BY c.name  
ORDER BY average_duration DESC                    		
LIMIT 1;  

-- 6 Display the top 10 most frequently rented movies in descending order
SELECT 
  f.title AS film_title,                     
  COUNT(r.rental_id) AS times_rented         

FROM film f
JOIN inventory i 
  ON f.film_id = i.film_id                   
JOIN rental r 
  ON i.inventory_id = r.inventory_id         

GROUP BY f.title                             
ORDER BY times_rented DESC                   
LIMIT 10;   